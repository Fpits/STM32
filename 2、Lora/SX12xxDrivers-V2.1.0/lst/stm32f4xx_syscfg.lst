
C:\Users\gcristian\Desktop\F429\Drivers\obj\stm32f4xx_syscfg.o:     file format elf32-littlearm
C:\Users\gcristian\Desktop\F429\Drivers\obj\stm32f4xx_syscfg.o


Disassembly of section .text.SYSCFG_DeInit:

00000000 <SYSCFG_DeInit>:
SYSCFG_DeInit():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:101
  *   registers to their default reset values.
  * @param  None
  * @retval None
  */
void SYSCFG_DeInit(void)
{
   0:	b580      	push	{r7, lr}
   2:	af00      	add	r7, sp, #0
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:102
   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   4:	f44f 4080 	mov.w	r0, #16384	; 0x4000
   8:	f04f 0101 	mov.w	r1, #1
   c:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:103
   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
  10:	f44f 4080 	mov.w	r0, #16384	; 0x4000
  14:	f04f 0100 	mov.w	r1, #0
  18:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:104
}
  1c:	bd80      	pop	{r7, pc}
  1e:	bf00      	nop

Disassembly of section .text.SYSCFG_MemoryRemapConfig:

00000000 <SYSCFG_MemoryRemapConfig>:
SYSCFG_MemoryRemapConfig():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:119
  *            @arg SYSCFG_MemoryRemap_SRAM:        Embedded SRAM (112kB) mapped at 0x00000000
  *            @arg SYSCFG_MemoryRemap_SDRAM:       FMC (External SDRAM)  mapped at 0x00000000 for STM32F42xxx/43xxx devices.            
  * @retval None
  */
void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
{
   0:	b480      	push	{r7}
   2:	b083      	sub	sp, #12
   4:	af00      	add	r7, sp, #0
   6:	4603      	mov	r3, r0
   8:	71fb      	strb	r3, [r7, #7]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:123
  /* Check the parameters */
  assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));

  SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
   a:	4b04      	ldr	r3, [pc, #16]	; (1c <SYSCFG_MemoryRemapConfig+0x1c>)
   c:	79fa      	ldrb	r2, [r7, #7]
   e:	601a      	str	r2, [r3, #0]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:124
}
  10:	f107 070c 	add.w	r7, r7, #12
  14:	46bd      	mov	sp, r7
  16:	bc80      	pop	{r7}
  18:	4770      	bx	lr
  1a:	bf00      	nop
  1c:	40013800 	.word	0x40013800

Disassembly of section .text.SYSCFG_MemorySwappingBank:

00000000 <SYSCFG_MemorySwappingBank>:
SYSCFG_MemorySwappingBank():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:140
  *            @arg DISABLE:(the default state) Flash Bank1 mapped at 0x08000000 (and aliased @0x0000 0000) 
                            and Flash Bank2 mapped at 0x08100000 (and aliased at 0x00100000)  
  * @retval None
  */
void SYSCFG_MemorySwappingBank(FunctionalState NewState)
{
   0:	b480      	push	{r7}
   2:	b083      	sub	sp, #12
   4:	af00      	add	r7, sp, #0
   6:	4603      	mov	r3, r0
   8:	71fb      	strb	r3, [r7, #7]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:144
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  *(__IO uint32_t *) UFB_MODE_BB = (uint32_t)NewState;
   a:	4b04      	ldr	r3, [pc, #16]	; (1c <SYSCFG_MemorySwappingBank+0x1c>)
   c:	79fa      	ldrb	r2, [r7, #7]
   e:	601a      	str	r2, [r3, #0]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:145
}
  10:	f107 070c 	add.w	r7, r7, #12
  14:	46bd      	mov	sp, r7
  16:	bc80      	pop	{r7}
  18:	4770      	bx	lr
  1a:	bf00      	nop
  1c:	42270020 	.word	0x42270020

Disassembly of section .text.SYSCFG_EXTILineConfig:

00000000 <SYSCFG_EXTILineConfig>:
SYSCFG_EXTILineConfig():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:163
  *           be (0..7) for STM32F42xxx/43xxx devices. 
  *             
  * @retval None
  */
void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
{
   0:	b490      	push	{r4, r7}
   2:	b084      	sub	sp, #16
   4:	af00      	add	r7, sp, #0
   6:	4602      	mov	r2, r0
   8:	460b      	mov	r3, r1
   a:	71fa      	strb	r2, [r7, #7]
   c:	71bb      	strb	r3, [r7, #6]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:164
  uint32_t tmp = 0x00;
   e:	f04f 0300 	mov.w	r3, #0
  12:	60fb      	str	r3, [r7, #12]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:170

  /* Check the parameters */
  assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
  assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));

  tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
  14:	79bb      	ldrb	r3, [r7, #6]
  16:	f003 0303 	and.w	r3, r3, #3
  1a:	ea4f 0383 	mov.w	r3, r3, lsl #2
  1e:	f04f 020f 	mov.w	r2, #15
  22:	fa02 f303 	lsl.w	r3, r2, r3
  26:	60fb      	str	r3, [r7, #12]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:171
  SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
  28:	4b1b      	ldr	r3, [pc, #108]	; (98 <SYSCFG_EXTILineConfig+0x98>)
  2a:	79ba      	ldrb	r2, [r7, #6]
  2c:	ea4f 0292 	mov.w	r2, r2, lsr #2
  30:	b2d2      	uxtb	r2, r2
  32:	4919      	ldr	r1, [pc, #100]	; (98 <SYSCFG_EXTILineConfig+0x98>)
  34:	79b8      	ldrb	r0, [r7, #6]
  36:	ea4f 0090 	mov.w	r0, r0, lsr #2
  3a:	b2c0      	uxtb	r0, r0
  3c:	f100 0002 	add.w	r0, r0, #2
  40:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
  44:	68f9      	ldr	r1, [r7, #12]
  46:	ea6f 0101 	mvn.w	r1, r1
  4a:	ea00 0101 	and.w	r1, r0, r1
  4e:	f102 0202 	add.w	r2, r2, #2
  52:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:172
  SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
  56:	4b10      	ldr	r3, [pc, #64]	; (98 <SYSCFG_EXTILineConfig+0x98>)
  58:	79ba      	ldrb	r2, [r7, #6]
  5a:	ea4f 0292 	mov.w	r2, r2, lsr #2
  5e:	b2d2      	uxtb	r2, r2
  60:	490d      	ldr	r1, [pc, #52]	; (98 <SYSCFG_EXTILineConfig+0x98>)
  62:	79b8      	ldrb	r0, [r7, #6]
  64:	ea4f 0090 	mov.w	r0, r0, lsr #2
  68:	b2c0      	uxtb	r0, r0
  6a:	f100 0002 	add.w	r0, r0, #2
  6e:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
  72:	79fc      	ldrb	r4, [r7, #7]
  74:	79b9      	ldrb	r1, [r7, #6]
  76:	f001 0103 	and.w	r1, r1, #3
  7a:	ea4f 0181 	mov.w	r1, r1, lsl #2
  7e:	fa04 f101 	lsl.w	r1, r4, r1
  82:	ea40 0101 	orr.w	r1, r0, r1
  86:	f102 0202 	add.w	r2, r2, #2
  8a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:173
}
  8e:	f107 0710 	add.w	r7, r7, #16
  92:	46bd      	mov	sp, r7
  94:	bc90      	pop	{r4, r7}
  96:	4770      	bx	lr
  98:	40013800 	.word	0x40013800

Disassembly of section .text.SYSCFG_ETH_MediaInterfaceConfig:

00000000 <SYSCFG_ETH_MediaInterfaceConfig>:
SYSCFG_ETH_MediaInterfaceConfig():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:184
  *            @arg SYSCFG_ETH_MediaInterface_MII: MII mode selected
  *            @arg SYSCFG_ETH_MediaInterface_RMII: RMII mode selected 
  * @retval None 
  */
void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
{ 
   0:	b083b480 	.word	0xb083b480
   4:	af00      	add	r7, sp, #0
   6:	6078      	str	r0, [r7, #4]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:187
  assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
  /* Configure MII_RMII selection bit */ 
  *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
   8:	4b03      	ldr	r3, [pc, #12]	; (18 <SYSCFG_ETH_MediaInterfaceConfig+0x18>)
   a:	687a      	ldr	r2, [r7, #4]
   c:	601a      	str	r2, [r3, #0]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:188
}
   e:	f107 070c 	add.w	r7, r7, #12
  12:	46bd      	mov	sp, r7
  14:	bc80      	pop	{r7}
  16:	4770      	bx	lr
  18:	422700dc 	.word	0x422700dc

Disassembly of section .text.SYSCFG_CompensationCellCmd:

00000000 <SYSCFG_CompensationCellCmd>:
SYSCFG_CompensationCellCmd():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:201
  *            @arg ENABLE: I/O compensation cell enabled  
  *            @arg DISABLE: I/O compensation cell power-down mode  
  * @retval None
  */
void SYSCFG_CompensationCellCmd(FunctionalState NewState)
{
   0:	b480      	push	{r7}
   2:	b083      	sub	sp, #12
   4:	af00      	add	r7, sp, #0
   6:	4603      	mov	r3, r0
   8:	71fb      	strb	r3, [r7, #7]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:205
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
   a:	4b04      	ldr	r3, [pc, #16]	; (1c <SYSCFG_CompensationCellCmd+0x1c>)
   c:	79fa      	ldrb	r2, [r7, #7]
   e:	601a      	str	r2, [r3, #0]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:206
}
  10:	f107 070c 	add.w	r7, r7, #12
  14:	46bd      	mov	sp, r7
  16:	bc80      	pop	{r7}
  18:	4770      	bx	lr
  1a:	bf00      	nop
  1c:	42270400 	.word	0x42270400

Disassembly of section .text.SYSCFG_GetCompensationCellStatus:

00000000 <SYSCFG_GetCompensationCellStatus>:
SYSCFG_GetCompensationCellStatus():
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:214
  * @brief  Checks whether the I/O Compensation Cell ready flag is set or not.
  * @param  None
  * @retval The new state of the I/O Compensation Cell ready flag (SET or RESET)
  */
FlagStatus SYSCFG_GetCompensationCellStatus(void)
{
   0:	b480      	push	{r7}
   2:	b083      	sub	sp, #12
   4:	af00      	add	r7, sp, #0
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:215
  FlagStatus bitstatus = RESET;
   6:	f04f 0300 	mov.w	r3, #0
   a:	71fb      	strb	r3, [r7, #7]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:217
    
  if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
   c:	4b09      	ldr	r3, [pc, #36]	; (34 <SYSCFG_GetCompensationCellStatus+0x34>)
   e:	6a1b      	ldr	r3, [r3, #32]
  10:	f403 7380 	and.w	r3, r3, #256	; 0x100
  14:	2b00      	cmp	r3, #0
  16:	d003      	beq.n	20 <SYSCFG_GetCompensationCellStatus+0x20>
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:219
  {
    bitstatus = SET;
  18:	f04f 0301 	mov.w	r3, #1
  1c:	71fb      	strb	r3, [r7, #7]
  1e:	e002      	b.n	26 <SYSCFG_GetCompensationCellStatus+0x26>
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:223
  }
  else
  {
    bitstatus = RESET;
  20:	f04f 0300 	mov.w	r3, #0
  24:	71fb      	strb	r3, [r7, #7]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:225
  }
  return bitstatus;
  26:	79fb      	ldrb	r3, [r7, #7]
C:\Users\gcristian\Desktop\F429\Drivers\src\platform\stm32libs\stm32f4xx\src/stm32f4xx_syscfg.c:226
}
  28:	4618      	mov	r0, r3
  2a:	f107 070c 	add.w	r7, r7, #12
  2e:	46bd      	mov	sp, r7
  30:	bc80      	pop	{r7}
  32:	4770      	bx	lr
  34:	40013800 	.word	0x40013800
